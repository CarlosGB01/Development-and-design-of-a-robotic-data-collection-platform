% Auto-generated by cameraCalibrator app on 06-Jun-2023
%-------------------------------------------------------


% Define images to process
imageFileNames = {'/home/motomami/Desktop/calib/2023_06_06_15_59_23.0746.jpg',...
    '/home/motomami/Desktop/calib/2023_06_06_15_59_27.0358.jpg',...
    '/home/motomami/Desktop/calib/2023_06_06_15_59_29.9487.jpg',...
    '/home/motomami/Desktop/calib/2023_06_06_15_59_34.8491.jpg',...
    '/home/motomami/Desktop/calib/2023_06_06_15_59_36.8354.jpg',...
    '/home/motomami/Desktop/calib/2023_06_06_15_59_40.4108.jpg',...
    '/home/motomami/Desktop/calib/2023_06_06_15_59_48.3591.jpg',...
    '/home/motomami/Desktop/calib/2023_06_06_15_59_50.3590.jpg',...
    '/home/motomami/Desktop/calib/2023_06_06_15_59_51.0753.jpg',...
    '/home/motomami/Desktop/calib/2023_06_06_16_00_03.8599.jpg',...
    '/home/motomami/Desktop/calib/2023_06_06_16_00_27.3024.jpg',...
    '/home/motomami/Desktop/calib/2023_06_06_16_00_33.3965.jpg',...
    '/home/motomami/Desktop/calib/2023_06_06_16_00_36.3775.jpg',...
    '/home/motomami/Desktop/calib/2023_06_06_16_00_36.5089.jpg',...
    };
% Detect calibration pattern in images
detector = vision.calibration.monocular.CheckerboardDetector();
[imagePoints, imagesUsed] = detectPatternPoints(detector, imageFileNames);
imageFileNames = imageFileNames(imagesUsed);

% Read the first image to obtain image size
originalImage = imread(imageFileNames{1});
[mrows, ncols, ~] = size(originalImage);

% Generate world coordinates for the planar pattern keypoints
squareSize = 80;  % in units of 'millimeters'
worldPoints = generateWorldPoints(detector, 'SquareSize', squareSize);

% Calibrate the camera
[cameraParams, imagesUsed, estimationErrors] = estimateCameraParameters(imagePoints, worldPoints, ...
    'EstimateSkew', false, 'EstimateTangentialDistortion', false, ...
    'NumRadialDistortionCoefficients', 2, 'WorldUnits', 'millimeters', ...
    'InitialIntrinsicMatrix', [], 'InitialRadialDistortion', [], ...
    'ImageSize', [mrows, ncols]);

% View reprojection errors
h1=figure; showReprojectionErrors(cameraParams);

% Visualize pattern locations
h2=figure; showExtrinsics(cameraParams, 'CameraCentric');

% Display parameter estimation errors
displayErrors(estimationErrors, cameraParams);

% For example, you can use the calibration data to remove effects of lens distortion.
undistortedImage = undistortImage(originalImage, cameraParams);

% See additional examples of how to use the calibration data.  At the prompt type:
% showdemo('MeasuringPlanarObjectsExample')
% showdemo('StructureFromMotionExample')
